"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[304],{304:(L,N,l)=>{l.r(N),l.d(N,{PaginarecuperarUsuarioPageModule:()=>e});var R=l(6814),s=l(9843),d=l(2058),p=l(5861),n=l(6223),o=l(5879),A=l(4535);const m=[{path:"",component:(()=>{var a;class r{constructor(i,u,c,E){this.fb=i,this.database=u,this.alertController=c,this.router=E,this.correoU="",this.contrasenaU="",this.formularioRecuperar=this.fb.group({correo:new n.NI("",[n.kI.required]),rut:new n.NI("",[n.kI.required]),contrasena:new n.NI("",[n.kI.required]),confcontrasena:new n.NI("",[n.kI.required])})}recuperarContrasena(){if(this.formularioRecuperar.valid){let i=this.formularioRecuperar.value;this.database.recuperarBuscar(i.correo,i.rut).then(u=>{u?this.database.recuperarUsuario(i.contrasena,i.correo,i.rut).then(c=>{null!==c?(console.log("Contrase\xf1a actualizada correctamente."),this.router.navigate(["/paginalogin-usuario"]).then(()=>{this.presentarAlerta("Contrase\xf1a recuperada","La contrase\xf1a que ha ingresado ha sido actualizada.")}),this.formularioRecuperar.reset()):(console.log("Error al recuperar contrase\xf1a."),this.presentarAlerta("Error al recuperar contrase\xf1a","El correo o rut no corresponden a la cuenta."))}).catch(c=>{console.error("Error en base de datos al recuperar contrase\xf1a: ",c)}):(console.log("Error al recuperar contrase\xf1a."),this.presentarAlerta("Error al recuperar contrase\xf1a","El correo o rut no corresponden a la cuenta."))}).catch(u=>{console.error("Error al recuperar contrase\xf1a:",u)})}}ngOnInit(){}presentarAlerta(i,u){var c=this;return(0,p.Z)(function*(){yield(yield c.alertController.create({header:i,message:u,buttons:["Aceptar"]})).present()})()}}return(a=r).\u0275fac=function(i){return new(i||a)(o.Y36(n.qu),o.Y36(A.N),o.Y36(s.Br),o.Y36(d.F0))},a.\u0275cmp=o.Xpm({type:a,selectors:[["app-paginarecuperar-usuario"]],decls:31,vars:1,consts:[["color","primary"],["slot","start"],["defaultHref","/paginalogin-usuario"],[3,"formGroup","ngSubmit"],["position","floating"],["type","text","formControlName","correo"],["type","text","formControlName","rut"],["type","password","formControlName","contrasena"],["type","password","formControlName","confcontrasena"],["position","relative","type","submit"]],template:function(i,u){1&i&&(o.TgZ(0,"ion-header")(1,"ion-toolbar",0)(2,"ion-buttons",1),o._UZ(3,"ion-back-button",2),o.qZA(),o.TgZ(4,"ion-title"),o._uU(5,"Recuperar Contrase\xf1a"),o.qZA()()(),o.TgZ(6,"ion-content")(7,"ion-card")(8,"ion-card-header",0)(9,"ion-card-title"),o._uU(10,"Ingrese Datos:"),o.qZA()(),o.TgZ(11,"ion-card-content")(12,"form",3),o.NdJ("ngSubmit",function(){return u.recuperarContrasena()}),o.TgZ(13,"ion-item")(14,"ion-label",4),o._uU(15,"Correo Registrado:"),o.qZA(),o._UZ(16,"ion-input",5),o.qZA(),o.TgZ(17,"ion-item")(18,"ion-label",4),o._uU(19,"Rut Asociado a la Cuenta:"),o.qZA(),o._UZ(20,"ion-input",6),o.qZA(),o.TgZ(21,"ion-item")(22,"ion-label",4),o._uU(23,"Nueva Contrase\xf1a:"),o.qZA(),o._UZ(24,"ion-input",7),o.qZA(),o.TgZ(25,"ion-item")(26,"ion-label",4),o._uU(27,"Confirmar Nueva Contrase\xf1a:"),o.qZA(),o._UZ(28,"ion-input",8),o.qZA(),o.TgZ(29,"ion-button",9),o._uU(30,"Confirmar"),o.qZA()()()()()),2&i&&(o.xp6(12),o.Q6J("formGroup",u.formularioRecuperar))},dependencies:[s.oU,s.YG,s.Sm,s.PM,s.FN,s.Zi,s.Dq,s.W2,s.Gu,s.pK,s.Ie,s.Q$,s.wd,s.sr,s.j9,s.cs,n._Y,n.JJ,n.JL,n.sg,n.u],styles:["#container[_ngcontent-%COMP%]{color:#000;width:95%;border-bottom:5%;border:solid 1.5px #469597}#us[_ngcontent-%COMP%]{margin-left:3%;font-family:calibri;font-size:xx-large}#letra[_ngcontent-%COMP%]{font-family:arial;font-size:medium;font-weight:500}.color[_ngcontent-%COMP%]{color:var(--ion-color-new-shade)}ion-content[_ngcontent-%COMP%]{--ion-background-color:rgb(241, 241, 236);--ion-border-color:primary}"]}),r})()}];let U=(()=>{var a;class r{}return(a=r).\u0275fac=function(i){return new(i||a)},a.\u0275mod=o.oAB({type:a}),a.\u0275inj=o.cJS({imports:[d.Bz.forChild(m),d.Bz]}),r})(),e=(()=>{var a;class r{}return(a=r).\u0275fac=function(i){return new(i||a)},a.\u0275mod=o.oAB({type:a}),a.\u0275inj=o.cJS({imports:[R.ez,s.Pc,U,n.u5,n.UX]}),r})()},4535:(L,N,l)=>{l.d(N,{N:()=>A});var R=l(5861),s=l(5619),d=l(5879),p=l(5320),n=l(9843),o=l(2058);let A=(()=>{var h;class m{constructor(e,a,r,t){this.sqlite=e,this.platform=a,this.alertController=r,this.router=t,this.tablaTipo="CREATE TABLE IF NOT EXISTS tipo (id_tipo INTEGER PRIMARY KEY AUTOINCREMENT, descripcion VARCHAR(20));",this.tablaRol="CREATE TABLE IF NOT EXISTS rol (id_rol INTEGER PRIMARY KEY AUTOINCREMENT, nombrerol VARCHAR(10));",this.tablaUsuarios="CREATE TABLE IF NOT EXISTS usuario (id INTEGER PRIMARY KEY AUTOINCREMENT, nombre VARCHAR(30) NOT NULL, apellido VARCHAR(30) NOT NULL, correo VARCHAR(30) NOT NULL, fechanacimiento DATE NOT NULL, rut VARCHAR(13) NOT NULL, celular INTEGER NOT NULL, contrasena VARCHAR(30) NOT NULL, id_rol INTEGER NOT NULL, FOREIGN KEY(id_rol) REFERENCES rol(id_rol));",this.tablaPagoUsuario="CREATE TABLE IF NOT EXISTS pago(id_pago INTEGER PRIMARY KEY AUTOINCREMENT, num_tarjeta NUMBER NOT NULL, fecha_caducidad DATE NOT NULL, cvv NUMBER NOT NULL, id INTEGER NOT NULL, FOREIGN KEY(id) REFERENCES usuario(id))",this.tablaVehiculo="CREATE TABLE IF NOT EXISTS vehiculo (id_vehiculo INTEGER PRIMARY KEY AUTOINCREMENT, marca VARCHAR(30) NOT NULL, modelo VARCHAR(30) NOT NULL, anio INTEGER NOT NULL, patente VARCHAR(6) NOT NULL, asientos INTEGER NOT NULL, id_usuario INTEGER NOT NULL, id_tipo INTEGER NOT NULL, FOREIGN KEY(id_usuario) REFERENCES usuario(id), FOREIGN KEY(id_tipo) REFERENCES tipo(id_tipo));",this.tablaViajes="CREATE TABLE IF NOT EXISTS viaje (id_viaje INTEGER PRIMARY KEY AUTOINCREMENT, f_viaje DATE NOT NULL, hora_salida DATETIME NOT NULL, salida VARCHAR(30) NOT NULL, destino VARCHAR(30) NOT NULL, cant_asientos INTEGER NOT NULL, total INTEGER NOT NULL, valor_asiento INTEGER NOT NULL, estado BOOLEAN NOT NULL, id_vehiculo INTEGER NOT NULL, FOREIGN KEY(id_vehiculo) REFERENCES vehiculo(id_vehiculo));",this.tablaViajesUser="CREATE TABLE IF NOT EXISTS viajeuser(id_viajeuser INTEGER PRIMARY KEY AUTOINCREMENT, f_viaje DATE NOT NULL, hora_salida DATETIME NOT NULL, salida VARCHAR(30) NOT NULL, destino VARCHAR(30) NOT NULL)",this.tablaDetalle="CREATE TABLE IF NOT EXISTS detalle (id_detalle INTEGER PRIMARY KEY AUTOINCREMENT, id_usuario INTEGER NOT NULL, id_viaje INTEGER NOT NULL, FOREIGN KEY(id_usuario) REFERENCES usuario(id), FOREIGN KEY(id_viaje) REFERENCES viaje(id_viaje));",this.registroRol="INSERT INTO rol VALUES (1, 'Usuario'), (2, 'Conductor');",this.registroTipoVehiculo="INSERT INTO tipo VALUES (1, 'Standard'), (2, 'Large'), (3, 'Deluxe')",this.listaUsuario=new s.X([]),this.listaViajeuser=new s.X([]),this.listaVehiculo=new s.X([]),this.isDBReady=new s.X(!1),this.crearBD()}dbState(){return this.isDBReady.asObservable()}fetchUsuario(){return this.listaUsuario.asObservable()}fetchVehiculo(){return this.listaVehiculo.asObservable()}fetchViajeUser(){return this.listaViajeuser.asObservable()}historialUsuario(e){return this.database.executeSql("SELECT * FROM viajeuser WHERE id = ?",[e]).then(a=>{let r=[];if(a.rows.length>0)for(var t=0;t<a.rows.length;t++)r.push({id_viajeuser:a.rows.item(t).id_viajeuser,f_viaje:a.rows.item(t).f_viaje,hora_salida:a.rows.item(t).hora_salida,salida:a.rows.item(t).salida,destino:a.rows.item(t).destino});this.listaViajeuser.next(r)})}buscarCorreo(e,a){return this.database.executeSql("SELECT id, id_rol FROM usuario WHERE correo = ? AND contrasena = ?",[e,a]).then(r=>r.rows.length>0?r.rows.item(0):null).catch(r=>(this.presentAlert("Error al buscar usuario:"+r),!1))}buscarDatosUsuario(e){return this.database.executeSql("SELECT * FROM usuario WHERE id = ?",[e]).then(a=>{let r=[];if(a.rows.length>0)for(var t=0;t<a.rows.length;t++)r.push({id:a.rows.item(t).id,nombre:a.rows.item(t).nombre,apellido:a.rows.item(t).apellido,correo:a.rows.item(t).correo,fechanacimiento:a.rows.item(t).fechanacimiento,rut:a.rows.item(t).rut,celular:a.rows.item(t).celular,contrasena:a.rows.item(t).contrasena});return r})}buscarVehiculoUsuario(e){return this.database.executeSql("SELECT * FROM vehiculo WHERE id_usuario = ?",[e]).then(a=>{let r=[];if(a.rows.length>0)for(var t=0;t<a.rows.length;t++)r.push({id_vehiculo:a.rows.item(t).id_vehiculo,marca:a.rows.item(t).marca,modelo:a.rows.item(t).modelo,annio:a.rows.item(t).annio,patente:a.rows.item(t).patente,asientos:a.rows.item(t).asientos,id_usuario:a.rows.item(t).id_usuario,id_tipo:a.rows.item(t).id_tipo});return r})}buscarViajeuser(){return this.database.executeSql("SELECT * FROM viajeuser",[]).then(e=>{let a=[];if(e.rows.length>0)for(var r=0;r<e.rows.length;r++)a.push({id_viajeuser:e.rows.item(r).id_viajeuser,f_viaje:e.rows.item(r).f_viaje,hora_salida:e.rows.item(r).hora_salida,salida:e.rows.item(r).salida,destino:e.rows.item(r).destino});this.listaViajeuser.next(a)})}buscarUsuario(){return this.database.executeSql("SELECT * FROM usuario",[]).then(e=>{let a=[];if(e.rows.length>0)for(var r=0;r<e.rows.length;r++)a.push({id:e.rows.item(r).id,nombre:e.rows.item(r).nombre,apellido:e.rows.item(r).apellido,fechanacimiento:e.rows.item(r).fechanacimiento,correo:e.rows.item(r).correo,rut:e.rows.item(r).rut,celular:e.rows.item(r).celular,contrasena:e.rows.item(r).contrasena});this.listaUsuario.next(a)})}buscarVehiculo(){return this.database.executeSql("SELECT * FROM vehiculo",[]).then(e=>{let a=[];if(e.rows.length>0)for(var r=0;r<e.rows.length;r++)a.push({id_vehiculo:e.rows.item(r).id_vehiculo,marca:e.rows.item(r).marca,modelo:e.rows.item(r).modelo,annio:e.rows.item(r).annio,patente:e.rows.item(r).patente,asientos:e.rows.item(r).asientos,id_usuario:e.rows.item(r).id_usuario,id_tipo:e.rows.item(r).id_tipo});this.listaVehiculo.next(a)})}insertarUsuario(e,a,r,t,i,u,c,E){return this.database.executeSql("INSERT INTO usuario(nombre, apellido, correo, fechanacimiento, rut, celular, contrasena, id_rol) VALUES (?, ?, ?, ?, ?, ?, ?, ?)",[e,a,r,t,i,u,c,E]).then(T=>{T?this.buscarUsuario():this.presentAlert("Error al insertar usuario en la base de datos.")}).catch(T=>{console.error("Error al insertar el usuario.",T)})}insertarVehiculo(e,a,r,t,i,u,c){return this.database.executeSql("INSERT INTO vehiculo(marca, modelo, annio, patente, asientos, id_usuario, id_tipo) VALUES (?, ?, ?, ?, ?, ?, ?)",[e,a,r,t,i,u,c]).then(E=>{E?this.buscarVehiculo():this.presentAlert("Error al insertar veh\xedculo en la base de datos.")}).catch(E=>{console.error("Error al insertar el veh\xedculo.",E)})}tomarViaje(e,a,r,t){return this.database.executeSql("INSERT INTO viajeuser VALUES(f_viaje, hora_salida, salida, destino) VALUES(?, ?, ?, ?)",[e,a,r,t]).then(i=>{i?this.buscarViajeuser():this.presentAlert("Error al insertar viaje en la base de datos.")}).catch(i=>{console.error("Error al insertar el viaje.",i)})}actualizarPerfil(e,a,r,t,i,u,c,E){return this.database.executeSql("UPDATE usuario SET nombre = ?, apellido = ?, correo = ?, fechanacimiento = ?, rut = ?, celular = ?, contrasena = ? WHERE id = ?",[e,a,r,t,i,u,c,E]).then(T=>!!T||(this.presentAlert("Error al actualizar usuario."),null)).catch(T=>{console.error("Error al actualizar usuario en base de datos:",T)})}recuperarBuscar(e,a){return this.database.executeSql("SELECT * FROM usuario WHERE correo = ? AND rut = ?",[e,a]).then(r=>r.rows.length>0?r.rows.item(0):null)}recuperarUsuario(e,a,r){return this.database.executeSql("UPDATE usuario SET contrasena = ? WHERE correo = ? AND rut = ?",[e,a,r]).then(t=>t?(this.buscarUsuario(),!0):(this.presentAlert("Error al actualizar contrase\xf1a."),null)).catch(t=>{console.error("Error al modificar la contrase\xf1a de usuario en la base de datos:",t)})}crearBD(){this.platform.ready().then(()=>{this.sqlite.create({name:"bdviago.bd",location:"default"}).then(e=>{this.database=e,this.crearTablas()}).catch(e=>{this.presentAlert("Error en platform: "+e)})})}crearTablas(){var e=this;return(0,R.Z)(function*(){try{yield e.database.executeSql(e.tablaTipo,[]),yield e.database.executeSql(e.tablaRol,[]),yield e.database.executeSql(e.tablaUsuarios,[]),yield e.database.executeSql(e.tablaVehiculo,[]),yield e.database.executeSql(e.tablaViajes,[]),yield e.database.executeSql(e.tablaDetalle,[]),yield e.database.executeSql(e.tablaViajesUser,[]),yield e.database.executeSql(e.registroRol,[]),yield e.database.executeSql(e.registroTipoVehiculo,[]),e.isDBReady.next(!0)}catch(a){e.presentAlert("Error en Crear Tablas: "+a)}})()}presentAlert(e){var a=this;return(0,R.Z)(function*(){yield(yield a.alertController.create({header:"Error",message:e,buttons:["Aceptar"]})).present()})()}}return(h=m).\u0275fac=function(e){return new(e||h)(d.LFG(p.e),d.LFG(n.t4),d.LFG(n.Br),d.LFG(o.F0))},h.\u0275prov=d.Yz7({token:h,factory:h.\u0275fac,providedIn:"root"}),m})()}}]);